// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#ifndef PROTOBUF_game_2eproto__INCLUDED
#define PROTOBUF_game_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "paigow.pb.h"
#include "common.pb.h"
// @@protoc_insertion_point(includes)
namespace proto3_proto {
class Ack;
class AckDefaultTypeInternal;
extern AckDefaultTypeInternal _Ack_default_instance_;
class C2S_CreateMatch;
class C2S_CreateMatchDefaultTypeInternal;
extern C2S_CreateMatchDefaultTypeInternal _C2S_CreateMatch_default_instance_;
class C2S_JoinMatch;
class C2S_JoinMatchDefaultTypeInternal;
extern C2S_JoinMatchDefaultTypeInternal _C2S_JoinMatch_default_instance_;
class C2S_LeaveMatch;
class C2S_LeaveMatchDefaultTypeInternal;
extern C2S_LeaveMatchDefaultTypeInternal _C2S_LeaveMatch_default_instance_;
class C2S_Login;
class C2S_LoginDefaultTypeInternal;
extern C2S_LoginDefaultTypeInternal _C2S_Login_default_instance_;
class C2S_PG_Bet;
class C2S_PG_BetDefaultTypeInternal;
extern C2S_PG_BetDefaultTypeInternal _C2S_PG_Bet_default_instance_;
class C2S_PG_Collocation;
class C2S_PG_CollocationDefaultTypeInternal;
extern C2S_PG_CollocationDefaultTypeInternal _C2S_PG_Collocation_default_instance_;
class C2S_PG_GrabBanker;
class C2S_PG_GrabBankerDefaultTypeInternal;
extern C2S_PG_GrabBankerDefaultTypeInternal _C2S_PG_GrabBanker_default_instance_;
class C2S_PG_StartGame;
class C2S_PG_StartGameDefaultTypeInternal;
extern C2S_PG_StartGameDefaultTypeInternal _C2S_PG_StartGame_default_instance_;
class C2S_PG_Sure;
class C2S_PG_SureDefaultTypeInternal;
extern C2S_PG_SureDefaultTypeInternal _C2S_PG_Sure_default_instance_;
class Match;
class MatchDefaultTypeInternal;
extern MatchDefaultTypeInternal _Match_default_instance_;
class PaiGowConfig;
class PaiGowConfigDefaultTypeInternal;
extern PaiGowConfigDefaultTypeInternal _PaiGowConfig_default_instance_;
class PaiGowPlayer;
class PaiGowPlayerDefaultTypeInternal;
extern PaiGowPlayerDefaultTypeInternal _PaiGowPlayer_default_instance_;
class PaiGowResult;
class PaiGowResultDefaultTypeInternal;
extern PaiGowResultDefaultTypeInternal _PaiGowResult_default_instance_;
class PaiGowSnapshot;
class PaiGowSnapshotDefaultTypeInternal;
extern PaiGowSnapshotDefaultTypeInternal _PaiGowSnapshot_default_instance_;
class PlayerInfo;
class PlayerInfoDefaultTypeInternal;
extern PlayerInfoDefaultTypeInternal _PlayerInfo_default_instance_;
class S2C_CreateMatch;
class S2C_CreateMatchDefaultTypeInternal;
extern S2C_CreateMatchDefaultTypeInternal _S2C_CreateMatch_default_instance_;
class S2C_Error;
class S2C_ErrorDefaultTypeInternal;
extern S2C_ErrorDefaultTypeInternal _S2C_Error_default_instance_;
class S2C_InitUserInfo;
class S2C_InitUserInfoDefaultTypeInternal;
extern S2C_InitUserInfoDefaultTypeInternal _S2C_InitUserInfo_default_instance_;
class S2C_LeaveMatch;
class S2C_LeaveMatchDefaultTypeInternal;
extern S2C_LeaveMatchDefaultTypeInternal _S2C_LeaveMatch_default_instance_;
class S2C_MatchSnapshot;
class S2C_MatchSnapshotDefaultTypeInternal;
extern S2C_MatchSnapshotDefaultTypeInternal _S2C_MatchSnapshot_default_instance_;
class S2C_OffLine;
class S2C_OffLineDefaultTypeInternal;
extern S2C_OffLineDefaultTypeInternal _S2C_OffLine_default_instance_;
class S2C_OnLine;
class S2C_OnLineDefaultTypeInternal;
extern S2C_OnLineDefaultTypeInternal _S2C_OnLine_default_instance_;
class S2C_PG_AddPlayer;
class S2C_PG_AddPlayerDefaultTypeInternal;
extern S2C_PG_AddPlayerDefaultTypeInternal _S2C_PG_AddPlayer_default_instance_;
class S2C_PG_Bet;
class S2C_PG_BetDefaultTypeInternal;
extern S2C_PG_BetDefaultTypeInternal _S2C_PG_Bet_default_instance_;
class S2C_PG_Collocation;
class S2C_PG_CollocationDefaultTypeInternal;
extern S2C_PG_CollocationDefaultTypeInternal _S2C_PG_Collocation_default_instance_;
class S2C_PG_Deal;
class S2C_PG_DealDefaultTypeInternal;
extern S2C_PG_DealDefaultTypeInternal _S2C_PG_Deal_default_instance_;
class S2C_PG_GrabBanker;
class S2C_PG_GrabBankerDefaultTypeInternal;
extern S2C_PG_GrabBankerDefaultTypeInternal _S2C_PG_GrabBanker_default_instance_;
class S2C_PG_GrabBanker_RES;
class S2C_PG_GrabBanker_RESDefaultTypeInternal;
extern S2C_PG_GrabBanker_RESDefaultTypeInternal _S2C_PG_GrabBanker_RES_default_instance_;
class S2C_PG_Result;
class S2C_PG_ResultDefaultTypeInternal;
extern S2C_PG_ResultDefaultTypeInternal _S2C_PG_Result_default_instance_;
class S2C_PG_StartGame;
class S2C_PG_StartGameDefaultTypeInternal;
extern S2C_PG_StartGameDefaultTypeInternal _S2C_PG_StartGame_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
}  // namespace proto3_proto

namespace proto3_proto {

namespace protobuf_game_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_game_2eproto

// ===================================================================

class Match : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto3_proto.Match) */ {
 public:
  Match();
  virtual ~Match();

  Match(const Match& from);

  inline Match& operator=(const Match& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Match& default_instance();

  static inline const Match* internal_default_instance() {
    return reinterpret_cast<const Match*>(
               &_Match_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Match* other);

  // implements Message ----------------------------------------------

  inline Match* New() const PROTOBUF_FINAL { return New(NULL); }

  Match* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Match& from);
  void MergeFrom(const Match& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Match* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto3_proto.PlayerInfo players = 10;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 10;
  const ::proto3_proto::PlayerInfo& players(int index) const;
  ::proto3_proto::PlayerInfo* mutable_players(int index);
  ::proto3_proto::PlayerInfo* add_players();
  ::google::protobuf::RepeatedPtrField< ::proto3_proto::PlayerInfo >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::proto3_proto::PlayerInfo >&
      players() const;

  // .proto3_proto.PaiGowConfig paigow = 9;
  bool has_paigow() const;
  void clear_paigow();
  static const int kPaigowFieldNumber = 9;
  const ::proto3_proto::PaiGowConfig& paigow() const;
  ::proto3_proto::PaiGowConfig* mutable_paigow();
  ::proto3_proto::PaiGowConfig* release_paigow();
  void set_allocated_paigow(::proto3_proto::PaiGowConfig* paigow);

  // int32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int64 create_time = 3;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 3;
  ::google::protobuf::int64 create_time() const;
  void set_create_time(::google::protobuf::int64 value);

  // int64 begin_time = 4;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 4;
  ::google::protobuf::int64 begin_time() const;
  void set_begin_time(::google::protobuf::int64 value);

  // int32 total_round = 5;
  void clear_total_round();
  static const int kTotalRoundFieldNumber = 5;
  ::google::protobuf::int32 total_round() const;
  void set_total_round(::google::protobuf::int32 value);

  // int32 cost = 6;
  void clear_cost();
  static const int kCostFieldNumber = 6;
  ::google::protobuf::int32 cost() const;
  void set_cost(::google::protobuf::int32 value);

  // int32 state = 7;
  void clear_state();
  static const int kStateFieldNumber = 7;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // int32 round = 8;
  void clear_round();
  static const int kRoundFieldNumber = 8;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto3_proto.Match)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto3_proto::PlayerInfo > players_;
  ::proto3_proto::PaiGowConfig* paigow_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 create_time_;
  ::google::protobuf::int64 begin_time_;
  ::google::protobuf::int32 total_round_;
  ::google::protobuf::int32 cost_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 round_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2S_CreateMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto3_proto.C2S_CreateMatch) */ {
 public:
  C2S_CreateMatch();
  virtual ~C2S_CreateMatch();

  C2S_CreateMatch(const C2S_CreateMatch& from);

  inline C2S_CreateMatch& operator=(const C2S_CreateMatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_CreateMatch& default_instance();

  static inline const C2S_CreateMatch* internal_default_instance() {
    return reinterpret_cast<const C2S_CreateMatch*>(
               &_C2S_CreateMatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(C2S_CreateMatch* other);

  // implements Message ----------------------------------------------

  inline C2S_CreateMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S_CreateMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S_CreateMatch& from);
  void MergeFrom(const C2S_CreateMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S_CreateMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto3_proto.PaiGowConfig paigow = 5;
  bool has_paigow() const;
  void clear_paigow();
  static const int kPaigowFieldNumber = 5;
  const ::proto3_proto::PaiGowConfig& paigow() const;
  ::proto3_proto::PaiGowConfig* mutable_paigow();
  ::proto3_proto::PaiGowConfig* release_paigow();
  void set_allocated_paigow(::proto3_proto::PaiGowConfig* paigow);

  // bool for_other = 1;
  void clear_for_other();
  static const int kForOtherFieldNumber = 1;
  bool for_other() const;
  void set_for_other(bool value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto3_proto.C2S_CreateMatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto3_proto::PaiGowConfig* paigow_;
  bool for_other_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_CreateMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto3_proto.S2C_CreateMatch) */ {
 public:
  S2C_CreateMatch();
  virtual ~S2C_CreateMatch();

  S2C_CreateMatch(const S2C_CreateMatch& from);

  inline S2C_CreateMatch& operator=(const S2C_CreateMatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_CreateMatch& default_instance();

  static inline const S2C_CreateMatch* internal_default_instance() {
    return reinterpret_cast<const S2C_CreateMatch*>(
               &_S2C_CreateMatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(S2C_CreateMatch* other);

  // implements Message ----------------------------------------------

  inline S2C_CreateMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_CreateMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_CreateMatch& from);
  void MergeFrom(const S2C_CreateMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_CreateMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto3_proto.Match match = 3;
  bool has_match() const;
  void clear_match();
  static const int kMatchFieldNumber = 3;
  const ::proto3_proto::Match& match() const;
  ::proto3_proto::Match* mutable_match();
  ::proto3_proto::Match* release_match();
  void set_allocated_match(::proto3_proto::Match* match);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // bool for_other = 2;
  void clear_for_other();
  static const int kForOtherFieldNumber = 2;
  bool for_other() const;
  void set_for_other(bool value);

  // @@protoc_insertion_point(class_scope:proto3_proto.S2C_CreateMatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto3_proto::Match* match_;
  ::google::protobuf::int32 code_;
  bool for_other_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2S_JoinMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto3_proto.C2S_JoinMatch) */ {
 public:
  C2S_JoinMatch();
  virtual ~C2S_JoinMatch();

  C2S_JoinMatch(const C2S_JoinMatch& from);

  inline C2S_JoinMatch& operator=(const C2S_JoinMatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_JoinMatch& default_instance();

  static inline const C2S_JoinMatch* internal_default_instance() {
    return reinterpret_cast<const C2S_JoinMatch*>(
               &_C2S_JoinMatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(C2S_JoinMatch* other);

  // implements Message ----------------------------------------------

  inline C2S_JoinMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S_JoinMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S_JoinMatch& from);
  void MergeFrom(const C2S_JoinMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S_JoinMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto3_proto.C2S_JoinMatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 room_id_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2S_LeaveMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto3_proto.C2S_LeaveMatch) */ {
 public:
  C2S_LeaveMatch();
  virtual ~C2S_LeaveMatch();

  C2S_LeaveMatch(const C2S_LeaveMatch& from);

  inline C2S_LeaveMatch& operator=(const C2S_LeaveMatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_LeaveMatch& default_instance();

  static inline const C2S_LeaveMatch* internal_default_instance() {
    return reinterpret_cast<const C2S_LeaveMatch*>(
               &_C2S_LeaveMatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(C2S_LeaveMatch* other);

  // implements Message ----------------------------------------------

  inline C2S_LeaveMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S_LeaveMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S_LeaveMatch& from);
  void MergeFrom(const C2S_LeaveMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S_LeaveMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto3_proto.C2S_LeaveMatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_LeaveMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto3_proto.S2C_LeaveMatch) */ {
 public:
  S2C_LeaveMatch();
  virtual ~S2C_LeaveMatch();

  S2C_LeaveMatch(const S2C_LeaveMatch& from);

  inline S2C_LeaveMatch& operator=(const S2C_LeaveMatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_LeaveMatch& default_instance();

  static inline const S2C_LeaveMatch* internal_default_instance() {
    return reinterpret_cast<const S2C_LeaveMatch*>(
               &_S2C_LeaveMatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(S2C_LeaveMatch* other);

  // implements Message ----------------------------------------------

  inline S2C_LeaveMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_LeaveMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_LeaveMatch& from);
  void MergeFrom(const S2C_LeaveMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_LeaveMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 seat_id = 1;
  void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  ::google::protobuf::uint32 seat_id() const;
  void set_seat_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3_proto.S2C_LeaveMatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 seat_id_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_OffLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto3_proto.S2C_OffLine) */ {
 public:
  S2C_OffLine();
  virtual ~S2C_OffLine();

  S2C_OffLine(const S2C_OffLine& from);

  inline S2C_OffLine& operator=(const S2C_OffLine& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_OffLine& default_instance();

  static inline const S2C_OffLine* internal_default_instance() {
    return reinterpret_cast<const S2C_OffLine*>(
               &_S2C_OffLine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(S2C_OffLine* other);

  // implements Message ----------------------------------------------

  inline S2C_OffLine* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_OffLine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_OffLine& from);
  void MergeFrom(const S2C_OffLine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_OffLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 seat_id = 1;
  void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  ::google::protobuf::uint32 seat_id() const;
  void set_seat_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3_proto.S2C_OffLine)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 seat_id_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_OnLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto3_proto.S2C_OnLine) */ {
 public:
  S2C_OnLine();
  virtual ~S2C_OnLine();

  S2C_OnLine(const S2C_OnLine& from);

  inline S2C_OnLine& operator=(const S2C_OnLine& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_OnLine& default_instance();

  static inline const S2C_OnLine* internal_default_instance() {
    return reinterpret_cast<const S2C_OnLine*>(
               &_S2C_OnLine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(S2C_OnLine* other);

  // implements Message ----------------------------------------------

  inline S2C_OnLine* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_OnLine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_OnLine& from);
  void MergeFrom(const S2C_OnLine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_OnLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 seat_id = 1;
  void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  ::google::protobuf::uint32 seat_id() const;
  void set_seat_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3_proto.S2C_OnLine)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 seat_id_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_MatchSnapshot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto3_proto.S2C_MatchSnapshot) */ {
 public:
  S2C_MatchSnapshot();
  virtual ~S2C_MatchSnapshot();

  S2C_MatchSnapshot(const S2C_MatchSnapshot& from);

  inline S2C_MatchSnapshot& operator=(const S2C_MatchSnapshot& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_MatchSnapshot& default_instance();

  static inline const S2C_MatchSnapshot* internal_default_instance() {
    return reinterpret_cast<const S2C_MatchSnapshot*>(
               &_S2C_MatchSnapshot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(S2C_MatchSnapshot* other);

  // implements Message ----------------------------------------------

  inline S2C_MatchSnapshot* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_MatchSnapshot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_MatchSnapshot& from);
  void MergeFrom(const S2C_MatchSnapshot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_MatchSnapshot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto3_proto.Match match = 1;
  bool has_match() const;
  void clear_match();
  static const int kMatchFieldNumber = 1;
  const ::proto3_proto::Match& match() const;
  ::proto3_proto::Match* mutable_match();
  ::proto3_proto::Match* release_match();
  void set_allocated_match(::proto3_proto::Match* match);

  // .proto3_proto.PaiGowSnapshot paigow = 2;
  bool has_paigow() const;
  void clear_paigow();
  static const int kPaigowFieldNumber = 2;
  const ::proto3_proto::PaiGowSnapshot& paigow() const;
  ::proto3_proto::PaiGowSnapshot* mutable_paigow();
  ::proto3_proto::PaiGowSnapshot* release_paigow();
  void set_allocated_paigow(::proto3_proto::PaiGowSnapshot* paigow);

  // @@protoc_insertion_point(class_scope:proto3_proto.S2C_MatchSnapshot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto3_proto::Match* match_;
  ::proto3_proto::PaiGowSnapshot* paigow_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Match

// int32 room_id = 1;
inline void Match::clear_room_id() {
  room_id_ = 0;
}
inline ::google::protobuf::int32 Match::room_id() const {
  // @@protoc_insertion_point(field_get:proto3_proto.Match.room_id)
  return room_id_;
}
inline void Match::set_room_id(::google::protobuf::int32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.Match.room_id)
}

// int32 type = 2;
inline void Match::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Match::type() const {
  // @@protoc_insertion_point(field_get:proto3_proto.Match.type)
  return type_;
}
inline void Match::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.Match.type)
}

// int64 create_time = 3;
inline void Match::clear_create_time() {
  create_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Match::create_time() const {
  // @@protoc_insertion_point(field_get:proto3_proto.Match.create_time)
  return create_time_;
}
inline void Match::set_create_time(::google::protobuf::int64 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.Match.create_time)
}

// int64 begin_time = 4;
inline void Match::clear_begin_time() {
  begin_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Match::begin_time() const {
  // @@protoc_insertion_point(field_get:proto3_proto.Match.begin_time)
  return begin_time_;
}
inline void Match::set_begin_time(::google::protobuf::int64 value) {
  
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.Match.begin_time)
}

// int32 total_round = 5;
inline void Match::clear_total_round() {
  total_round_ = 0;
}
inline ::google::protobuf::int32 Match::total_round() const {
  // @@protoc_insertion_point(field_get:proto3_proto.Match.total_round)
  return total_round_;
}
inline void Match::set_total_round(::google::protobuf::int32 value) {
  
  total_round_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.Match.total_round)
}

// int32 cost = 6;
inline void Match::clear_cost() {
  cost_ = 0;
}
inline ::google::protobuf::int32 Match::cost() const {
  // @@protoc_insertion_point(field_get:proto3_proto.Match.cost)
  return cost_;
}
inline void Match::set_cost(::google::protobuf::int32 value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.Match.cost)
}

// int32 state = 7;
inline void Match::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 Match::state() const {
  // @@protoc_insertion_point(field_get:proto3_proto.Match.state)
  return state_;
}
inline void Match::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.Match.state)
}

// int32 round = 8;
inline void Match::clear_round() {
  round_ = 0;
}
inline ::google::protobuf::int32 Match::round() const {
  // @@protoc_insertion_point(field_get:proto3_proto.Match.round)
  return round_;
}
inline void Match::set_round(::google::protobuf::int32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.Match.round)
}

// .proto3_proto.PaiGowConfig paigow = 9;
inline bool Match::has_paigow() const {
  return this != internal_default_instance() && paigow_ != NULL;
}
inline void Match::clear_paigow() {
  if (GetArenaNoVirtual() == NULL && paigow_ != NULL) delete paigow_;
  paigow_ = NULL;
}
inline const ::proto3_proto::PaiGowConfig& Match::paigow() const {
  // @@protoc_insertion_point(field_get:proto3_proto.Match.paigow)
  return paigow_ != NULL ? *paigow_
                         : *::proto3_proto::PaiGowConfig::internal_default_instance();
}
inline ::proto3_proto::PaiGowConfig* Match::mutable_paigow() {
  
  if (paigow_ == NULL) {
    paigow_ = new ::proto3_proto::PaiGowConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto3_proto.Match.paigow)
  return paigow_;
}
inline ::proto3_proto::PaiGowConfig* Match::release_paigow() {
  // @@protoc_insertion_point(field_release:proto3_proto.Match.paigow)
  
  ::proto3_proto::PaiGowConfig* temp = paigow_;
  paigow_ = NULL;
  return temp;
}
inline void Match::set_allocated_paigow(::proto3_proto::PaiGowConfig* paigow) {
  delete paigow_;
  paigow_ = paigow;
  if (paigow) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3_proto.Match.paigow)
}

// repeated .proto3_proto.PlayerInfo players = 10;
inline int Match::players_size() const {
  return players_.size();
}
inline void Match::clear_players() {
  players_.Clear();
}
inline const ::proto3_proto::PlayerInfo& Match::players(int index) const {
  // @@protoc_insertion_point(field_get:proto3_proto.Match.players)
  return players_.Get(index);
}
inline ::proto3_proto::PlayerInfo* Match::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto3_proto.Match.players)
  return players_.Mutable(index);
}
inline ::proto3_proto::PlayerInfo* Match::add_players() {
  // @@protoc_insertion_point(field_add:proto3_proto.Match.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3_proto::PlayerInfo >*
Match::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto3_proto.Match.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3_proto::PlayerInfo >&
Match::players() const {
  // @@protoc_insertion_point(field_list:proto3_proto.Match.players)
  return players_;
}

// -------------------------------------------------------------------

// C2S_CreateMatch

// bool for_other = 1;
inline void C2S_CreateMatch::clear_for_other() {
  for_other_ = false;
}
inline bool C2S_CreateMatch::for_other() const {
  // @@protoc_insertion_point(field_get:proto3_proto.C2S_CreateMatch.for_other)
  return for_other_;
}
inline void C2S_CreateMatch::set_for_other(bool value) {
  
  for_other_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.C2S_CreateMatch.for_other)
}

// int32 type = 2;
inline void C2S_CreateMatch::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 C2S_CreateMatch::type() const {
  // @@protoc_insertion_point(field_get:proto3_proto.C2S_CreateMatch.type)
  return type_;
}
inline void C2S_CreateMatch::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.C2S_CreateMatch.type)
}

// .proto3_proto.PaiGowConfig paigow = 5;
inline bool C2S_CreateMatch::has_paigow() const {
  return this != internal_default_instance() && paigow_ != NULL;
}
inline void C2S_CreateMatch::clear_paigow() {
  if (GetArenaNoVirtual() == NULL && paigow_ != NULL) delete paigow_;
  paigow_ = NULL;
}
inline const ::proto3_proto::PaiGowConfig& C2S_CreateMatch::paigow() const {
  // @@protoc_insertion_point(field_get:proto3_proto.C2S_CreateMatch.paigow)
  return paigow_ != NULL ? *paigow_
                         : *::proto3_proto::PaiGowConfig::internal_default_instance();
}
inline ::proto3_proto::PaiGowConfig* C2S_CreateMatch::mutable_paigow() {
  
  if (paigow_ == NULL) {
    paigow_ = new ::proto3_proto::PaiGowConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto3_proto.C2S_CreateMatch.paigow)
  return paigow_;
}
inline ::proto3_proto::PaiGowConfig* C2S_CreateMatch::release_paigow() {
  // @@protoc_insertion_point(field_release:proto3_proto.C2S_CreateMatch.paigow)
  
  ::proto3_proto::PaiGowConfig* temp = paigow_;
  paigow_ = NULL;
  return temp;
}
inline void C2S_CreateMatch::set_allocated_paigow(::proto3_proto::PaiGowConfig* paigow) {
  delete paigow_;
  paigow_ = paigow;
  if (paigow) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3_proto.C2S_CreateMatch.paigow)
}

// -------------------------------------------------------------------

// S2C_CreateMatch

// int32 code = 1;
inline void S2C_CreateMatch::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 S2C_CreateMatch::code() const {
  // @@protoc_insertion_point(field_get:proto3_proto.S2C_CreateMatch.code)
  return code_;
}
inline void S2C_CreateMatch::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.S2C_CreateMatch.code)
}

// bool for_other = 2;
inline void S2C_CreateMatch::clear_for_other() {
  for_other_ = false;
}
inline bool S2C_CreateMatch::for_other() const {
  // @@protoc_insertion_point(field_get:proto3_proto.S2C_CreateMatch.for_other)
  return for_other_;
}
inline void S2C_CreateMatch::set_for_other(bool value) {
  
  for_other_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.S2C_CreateMatch.for_other)
}

// .proto3_proto.Match match = 3;
inline bool S2C_CreateMatch::has_match() const {
  return this != internal_default_instance() && match_ != NULL;
}
inline void S2C_CreateMatch::clear_match() {
  if (GetArenaNoVirtual() == NULL && match_ != NULL) delete match_;
  match_ = NULL;
}
inline const ::proto3_proto::Match& S2C_CreateMatch::match() const {
  // @@protoc_insertion_point(field_get:proto3_proto.S2C_CreateMatch.match)
  return match_ != NULL ? *match_
                         : *::proto3_proto::Match::internal_default_instance();
}
inline ::proto3_proto::Match* S2C_CreateMatch::mutable_match() {
  
  if (match_ == NULL) {
    match_ = new ::proto3_proto::Match;
  }
  // @@protoc_insertion_point(field_mutable:proto3_proto.S2C_CreateMatch.match)
  return match_;
}
inline ::proto3_proto::Match* S2C_CreateMatch::release_match() {
  // @@protoc_insertion_point(field_release:proto3_proto.S2C_CreateMatch.match)
  
  ::proto3_proto::Match* temp = match_;
  match_ = NULL;
  return temp;
}
inline void S2C_CreateMatch::set_allocated_match(::proto3_proto::Match* match) {
  delete match_;
  match_ = match;
  if (match) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3_proto.S2C_CreateMatch.match)
}

// -------------------------------------------------------------------

// C2S_JoinMatch

// int32 room_id = 1;
inline void C2S_JoinMatch::clear_room_id() {
  room_id_ = 0;
}
inline ::google::protobuf::int32 C2S_JoinMatch::room_id() const {
  // @@protoc_insertion_point(field_get:proto3_proto.C2S_JoinMatch.room_id)
  return room_id_;
}
inline void C2S_JoinMatch::set_room_id(::google::protobuf::int32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.C2S_JoinMatch.room_id)
}

// -------------------------------------------------------------------

// C2S_LeaveMatch

// -------------------------------------------------------------------

// S2C_LeaveMatch

// uint32 seat_id = 1;
inline void S2C_LeaveMatch::clear_seat_id() {
  seat_id_ = 0u;
}
inline ::google::protobuf::uint32 S2C_LeaveMatch::seat_id() const {
  // @@protoc_insertion_point(field_get:proto3_proto.S2C_LeaveMatch.seat_id)
  return seat_id_;
}
inline void S2C_LeaveMatch::set_seat_id(::google::protobuf::uint32 value) {
  
  seat_id_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.S2C_LeaveMatch.seat_id)
}

// -------------------------------------------------------------------

// S2C_OffLine

// uint32 seat_id = 1;
inline void S2C_OffLine::clear_seat_id() {
  seat_id_ = 0u;
}
inline ::google::protobuf::uint32 S2C_OffLine::seat_id() const {
  // @@protoc_insertion_point(field_get:proto3_proto.S2C_OffLine.seat_id)
  return seat_id_;
}
inline void S2C_OffLine::set_seat_id(::google::protobuf::uint32 value) {
  
  seat_id_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.S2C_OffLine.seat_id)
}

// -------------------------------------------------------------------

// S2C_OnLine

// uint32 seat_id = 1;
inline void S2C_OnLine::clear_seat_id() {
  seat_id_ = 0u;
}
inline ::google::protobuf::uint32 S2C_OnLine::seat_id() const {
  // @@protoc_insertion_point(field_get:proto3_proto.S2C_OnLine.seat_id)
  return seat_id_;
}
inline void S2C_OnLine::set_seat_id(::google::protobuf::uint32 value) {
  
  seat_id_ = value;
  // @@protoc_insertion_point(field_set:proto3_proto.S2C_OnLine.seat_id)
}

// -------------------------------------------------------------------

// S2C_MatchSnapshot

// .proto3_proto.Match match = 1;
inline bool S2C_MatchSnapshot::has_match() const {
  return this != internal_default_instance() && match_ != NULL;
}
inline void S2C_MatchSnapshot::clear_match() {
  if (GetArenaNoVirtual() == NULL && match_ != NULL) delete match_;
  match_ = NULL;
}
inline const ::proto3_proto::Match& S2C_MatchSnapshot::match() const {
  // @@protoc_insertion_point(field_get:proto3_proto.S2C_MatchSnapshot.match)
  return match_ != NULL ? *match_
                         : *::proto3_proto::Match::internal_default_instance();
}
inline ::proto3_proto::Match* S2C_MatchSnapshot::mutable_match() {
  
  if (match_ == NULL) {
    match_ = new ::proto3_proto::Match;
  }
  // @@protoc_insertion_point(field_mutable:proto3_proto.S2C_MatchSnapshot.match)
  return match_;
}
inline ::proto3_proto::Match* S2C_MatchSnapshot::release_match() {
  // @@protoc_insertion_point(field_release:proto3_proto.S2C_MatchSnapshot.match)
  
  ::proto3_proto::Match* temp = match_;
  match_ = NULL;
  return temp;
}
inline void S2C_MatchSnapshot::set_allocated_match(::proto3_proto::Match* match) {
  delete match_;
  match_ = match;
  if (match) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3_proto.S2C_MatchSnapshot.match)
}

// .proto3_proto.PaiGowSnapshot paigow = 2;
inline bool S2C_MatchSnapshot::has_paigow() const {
  return this != internal_default_instance() && paigow_ != NULL;
}
inline void S2C_MatchSnapshot::clear_paigow() {
  if (GetArenaNoVirtual() == NULL && paigow_ != NULL) delete paigow_;
  paigow_ = NULL;
}
inline const ::proto3_proto::PaiGowSnapshot& S2C_MatchSnapshot::paigow() const {
  // @@protoc_insertion_point(field_get:proto3_proto.S2C_MatchSnapshot.paigow)
  return paigow_ != NULL ? *paigow_
                         : *::proto3_proto::PaiGowSnapshot::internal_default_instance();
}
inline ::proto3_proto::PaiGowSnapshot* S2C_MatchSnapshot::mutable_paigow() {
  
  if (paigow_ == NULL) {
    paigow_ = new ::proto3_proto::PaiGowSnapshot;
  }
  // @@protoc_insertion_point(field_mutable:proto3_proto.S2C_MatchSnapshot.paigow)
  return paigow_;
}
inline ::proto3_proto::PaiGowSnapshot* S2C_MatchSnapshot::release_paigow() {
  // @@protoc_insertion_point(field_release:proto3_proto.S2C_MatchSnapshot.paigow)
  
  ::proto3_proto::PaiGowSnapshot* temp = paigow_;
  paigow_ = NULL;
  return temp;
}
inline void S2C_MatchSnapshot::set_allocated_paigow(::proto3_proto::PaiGowSnapshot* paigow) {
  delete paigow_;
  paigow_ = paigow;
  if (paigow) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3_proto.S2C_MatchSnapshot.paigow)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto3_proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_2eproto__INCLUDED
